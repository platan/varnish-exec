buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.7'
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.1'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
    }
}

apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'

repositories {
    jcenter()
}

allprojects {
    version = '0.1.0-SNAPSHOT'
    group = 'com.github.platan'
}

ext {
    deps = [
            groovy: 'org.codehaus.groovy:groovy-all:2.3.7',
            spock: 'org.spockframework:spock-core:1.0-groovy-2.3-SNAPSHOT'
    ]
}
subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'checkstyle'
    apply plugin: 'codenarc'
    apply plugin: 'idea'
    apply plugin: 'info.solidsoft.pitest'
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'
    apply plugin: 'sonar-runner'
    apply plugin: 'com.github.ben-manes.versions'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }

    configurations {
        provided
    }

    sourceSets {
        main { compileClasspath += configurations.provided }
    }

    idea {
        module {
            scopes.PROVIDED.plus += [configurations.provided]
        }
    }

    pitest {
        targetClasses = ['com.github.platan.varnishexec.*']
    }

    codenarc {
        configFile = new File("${project.rootDir}/config/codenarc/rules.groovy")
        toolVersion = codenarcToolVersion
    }

    jacoco {
        toolVersion = jacocoToolVersion
    }

    checkstyle {
        toolVersion = checkstyleToolVersion
        configFile = new File("${project.rootDir}/config/checkstyle/checkstyle.xml")
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
    }
}

task jacocoRootReport(type: JacocoReport) {
    additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)
    reports {
        html.enabled = true
        xml.enabled = true
    }
    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
    subprojects.sourceSets.main.allSource.srcDirs*.path.each { sourceDirs.addAll(it) }
}

tasks.coveralls {
    dependsOn jacocoRootReport
    onlyIf { System.env.'CI' }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}